createUser:
  handler: src/users/createUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:PutItem
        - sns:Publish
      Resource:
        - Fn::GetAtt:
          - MyAppDatabase
          - Arn
        - Fn::ImportValue: MySNSTopicArn
  environment:
    TABLE_NAME:
      Ref: MyAppDatabase
    SNS_ARN:
        Fn::ImportValue: MySNSTopicArn
    ClientPool_ID:
      Ref: myUserPoolClient
  events:
    - http:
        method: post
        path: /v1/users
        cors: true
    

deleteUser:
  handler: src/users/deleteUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DeleteItem
      Resource:
        Fn::GetAtt:
          - MyAppDatabase
          - Arn
  environment:
    TABLE_NAME:
      Ref:  MyAppDatabase
  events:
    - http:
        method: delete
        path: /v1/users
        cors: true

getUser:
  handler: src/users/getUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
      Resource:
        - Fn::GetAtt:
          - MyAppDatabase
          - Arn
  environment:
    TABLE_NAME:
      Ref:  MyAppDatabase
  events:
    - http:
        method: get
        path: /v1/users/{id}
        authorizer: 
            type: COGNITO_USER_POOLS
            authorizerId: 
              Ref: myAuthorizer
        cors: true

updateUser:
  handler: src/users/updateUser/handler.default
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:UpdateItem
        - sns:Publish
      Resource:
        - Fn::GetAtt:
          - MyAppDatabase
          - Arn
        - Fn::ImportValue: MySNSTopicArn
  environment:
    TABLE_NAME:
      Ref:  MyAppDatabase
    SNS_ARN:
        Fn::ImportValue: MySNSTopicArn
  events:
    - http:
        method: put
        path: /v1/users
        cors: true